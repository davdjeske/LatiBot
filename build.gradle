plugins {
	id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
    maven {
		url 'https://jitpack.io'
	}
}

dependencies {
    implementation("net.dv8tion:JDA:5.0.0-beta.13")
	implementation("ch.qos.logback:logback-classic:1.2.8")
	implementation('com.github.walkyst:lavaplayer-fork:1.4.3')
	implementation('net.java.dev.jna:jna:4.5.0')
	implementation('org.json:json:20230618')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

sourceSets {
    main {
        resources {
            srcDirs 'lib'
        }
    }
}



task compileNative(type: Exec, group: 'build') {
//this doesnt work bc compiling with gcc causes some unspecified problem. im just using microsoft visual c instead
//see note in latibot.audio.DecTalkWrapper for more info
	dependsOn compileJava
	workingDir project.projectDir
	def javaHome = System.getenv('JAVA_HOME')
	if (javaHome == null) {throw new GradleException("JAVA_HOME environment variable is not set.")}
	commandLine 'gcc', '-m64', '-Wall', '-Wl,--kill-at', '-shared', '-o', 'DecTalkWrapper.dll', 'src/main/c/DecTalkWrapper.c',
            '-Isrc/main/c', "-I${javaHome}\\include", "-I${javaHome}\\include\\win32",
            '-Ibuild/generated/sources/headers/java/main', '-Llib', '-ldectalk'
	
	environment 'PATH', System.getenv('PATH')
	standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

//build.dependsOn compileNative
//run.dependsOn compileNative

application {
    mainClass = 'latibot.LatiBot'
    applicationDefaultJvmArgs = ["-Djava.library.path=" + file("${project.projectDir}").absolutePath]
}
